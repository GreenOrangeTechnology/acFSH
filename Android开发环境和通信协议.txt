1.安装JDK并设置环境变量
2.官网下载Android Studio,安装完成后打开VPN下载SDK
2.* Kotlin开发环境配置
3.新建一个新的空白项目并用USB线连接手机调试


通信协议设计  https://wenku.baidu.com/view/3871adf3fad6195f302ba672.html
http://m.blog.csdn.net/shenziheng1/article/details/52937401
https://www.cnblogs.com/wlsandwho/p/4766599.html
协议一般要包含:起始符、、数据、校验码、结束符，5个部分的定义。其中 起始符、结束符，不能与其他数据重码。如只要传输字母与数字，可以看下ASCII码表，使用非数字和字母的符号做起始结束符即可，如{};数据长度码即表示此串数据包的数据长度，如果传输的数据串长度固定可省去;校验码相当于对此串数据正确性的校验，和奇偶校验效果类似，一般是和校验，即将数据全部累加得到一个和值当校验码，接收方收到数据也做一样的运算与收到的检验码比较，相等就说明正确接收。如要发{1234567890 }换成16进制即:7B 10 31 32 33 34 35 36 37 38 39 30 25 7D;31~30是数据，7B,7D分别为起始和结束符，10为数据长度的BCD码，25是校验码，是31~30的和模100后的BCD码，转成BCD码是为了避免与 起始和结束符重码。

设计通信协议关键是看你的用途.
要注意你通信帧的起止字符是否会和通信数据发生冲突,以及如何避免这种冲突.
其次是数据安全性,容错能力以及信息传递的效率

要传送浮点数，通常有两种解决方式：
文本化。也就是传送描述浮点数的字符串，我们知道字符串是完全跨平台的，尤其是在UTF-8这样全球统一字符编码的情况下。
转换为整数。例如1.2，可以用整数12代替，只是要规定单位为0.1即可。

